{"version":3,"sources":["components/AddTodo.jsx","App.jsx","index.js"],"names":["AddTodo","useState","description","setDescription","onSubmitForm","e","a","body","fetch","method","headers","JSON","stringify","response","console","log","error","message","Container","Form","onSubmit","TextField","variant","label","fullWidth","margin","value","onChange","target","Button","size","color","type","styled","div","form","App","todosList","setTodosList","openDialog","setOpenDialog","selectedTodo","setSelectedTodo","handleClose","handleSave","preventDefault","editText","todo_id","res","window","location","fetchTodos","json","arrayOfTodoObjects","sort","b","useEffect","className","map","todoItem","Row","disableElevation","onClick","id","filter","todo","err","deleteItem","Dialog","open","onClose","aria-labelledby","DialogContent","autoFocus","defaultValue","DialogActions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e013d38b.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\nconst AddTodo = () => {\r\n\tconst [description, setDescription] = useState(\"\");\r\n\r\n\tconst onSubmitForm = async (e) => {\r\n\t\ttry {\r\n\t\t\tconst body = { description };\r\n\t\t\tconst response = await fetch(\"http://localhost:5000/todos\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(body),\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(response);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err.message);\r\n\t\t}\r\n\t\tsetDescription(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Form onSubmit={onSubmitForm}>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\tlabel='Add todo'\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tmargin='none'\r\n\t\t\t\t\tvalue={description}\r\n\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button fullWidth size='large' variant='contained' color='primary' type='submit'>\r\n\t\t\t\t\tAdd Todo\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default AddTodo;\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n\tmax-width: 960px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n\tdisplay: grid;\r\n\tjustify-items: center;\r\n\talign-items: center;\r\n\tgrid-template-columns: 4fr 1fr;\r\n\twidth: 100%;\r\n\tmax-width: 760px;\r\n\tpadding: 50px;\r\n`;\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport AddTodo from \"./components/AddTodo\";\nimport { Button, Dialog, DialogActions, DialogContent, TextField } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nfunction App() {\n\tconst [todosList, setTodosList] = useState([]);\n\tconst [openDialog, setOpenDialog] = useState(false);\n\tconst [selectedTodo, setSelectedTodo] = useState(null);\n\n\tconst handleOpen = () => {\n\t\tsetOpenDialog(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpenDialog(false);\n\t};\n\n\tconst handleSave = async (e) => {\n\t\te.preventDefault();\n\t\tconst editText=e.target[0].value;\n\t\tconsole.log(selectedTodo.todo_id)\n\t\tconsole.log(editText)\n\t\ttry {\n\t\t\t//update on server\n\t\t\tconst body = { description: editText };\n\t\t\tconst res = await fetch(`http://localhost:5000/todos/${selectedTodo.todo_id}`, {\n\t\t\t\tmethod: \"PUT\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(body),\n\t\t\t});\n\t\t\tconsole.log(res);\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t} finally {\n\t\t\t//update UI (rerender)\n\t\t\twindow.location = \"/\";\n\t\t}\n\t\thandleClose();\n\t};\n\n\tconst deleteItem = (id) => {\n\t\ttry {\n\t\t\t//update on server\n\t\t\tfetch(`http://localhost:5000/todos/${id}`, {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t});\n\t\t\t//update UI\n\t\t\tsetTodosList(todosList.filter((todo) => todo.todo_id !== id));\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t};\n\n\tconst fetchTodos = async () => {\n\t\ttry {\n\t\t\tconst res = await fetch(\"http://localhost:5000/todos\");\n\t\t\tconst arrayOfTodoObjects = await res.json();\n\t\t\tsetTodosList(arrayOfTodoObjects.sort((a, b) => a.todo_id - b.todo_id));\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tfetchTodos();\n\t}, []);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<h1>My ToDo List</h1>\n\t\t\t<AddTodo />\n\t\t\t<Container>\n\t\t\t\t{todosList.map((todoItem) => (\n\t\t\t\t\t<Row key={todoItem.todo_id}>\n\t\t\t\t\t\t<p>{todoItem.description}</p>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetSelectedTodo(todoItem);\n\t\t\t\t\t\t\t\thandleOpen();\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\tonClick={() => deleteItem(todoItem.todo_id)}>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t))}\n\t\t\t</Container>\n\t\t\t<Dialog\n\t\t\t\topen={openDialog}\n\t\t\t\tonClose={handleClose}\n\t\t\t\taria-labelledby='form-dialog-title'\n\t\t\t\tfullWidth>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<form id='myForm' onSubmit={handleSave}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\tlabel='Edit Todo'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tdefaultValue={selectedTodo ? selectedTodo.description : null}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleClose} color='primary'>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type='submit' form='myForm' color='primary'>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n}\n\nexport default App;\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100%;\n\tmax-width: 960px;\n\tborder-radius: 5px;\n`;\n\nconst Row = styled.div`\n\tdisplay: grid;\n\twidth: 100%;\n\tgrid-template-columns: 4fr 0.8fr 0.8fr;\n\tgrid-gap: 5px;\n\tpadding: 10px;\n\tmargin: 10px;\n\tbackground-color: whitesmoke;\n\tborder-radius: 5px;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}